From 721eacdb586c6e5087be00bbf290116e179bd0d0 Mon Sep 17 00:00:00 2001
From: Sergiy Kibrik <sakib@meta.ua>
Date: Mon, 25 Nov 2013 00:40:01 +0200
Subject: [PATCH 1/2] use native screen resolution

Remove hard-coded 600x800 and use actual X display size
---
 zlibrary/ui/src/ewl/dialogs/ZLEwlHelp.cpp      |    7 ++++--
 zlibrary/ui/src/ewl/dialogs/ZLEwlMessage.cpp   |   28 +++++++++++++++++-------
 zlibrary/ui/src/ewl/view/ZLEwlPaintContext.cpp |    5 ++---
 zlibrary/ui/src/ewl/view/ZLEwlViewWidget.cpp   |   10 ++++-----
 4 files changed, 32 insertions(+), 18 deletions(-)

diff --git a/zlibrary/ui/src/ewl/dialogs/ZLEwlHelp.cpp b/zlibrary/ui/src/ewl/dialogs/ZLEwlHelp.cpp
index b54eef1..174b998 100644
--- a/zlibrary/ui/src/ewl/dialogs/ZLEwlHelp.cpp
+++ b/zlibrary/ui/src/ewl/dialogs/ZLEwlHelp.cpp
@@ -121,8 +121,11 @@ static Eina_Bool screen_change_handler(void *data, int type, void *event)
 void show_help()
 {
     ee_init();
+    int width, height;
+    Ecore_X_Screen *screen = ecore_x_default_screen_get();
+    ecore_x_screen_size_get(screen, &width, &height);
 
-    Ecore_Evas *main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, 600, 800);
+    Ecore_Evas *main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, width, height);
     ecore_evas_borderless_set(main_win, 0);
     ecore_evas_title_set(main_win, gettext("FBReader: Help"));
     ecore_evas_name_class_set(main_win, "fbreader_help", "fbreader_help");
@@ -147,7 +150,7 @@ void show_help()
 
     evas_object_name_set(rr, "help-window");
     evas_object_move(rr, 0, 0);
-    evas_object_resize(rr, 600, 800);
+    evas_object_resize(rr, width, height);
     evas_object_show(rr);
 
     Evas_Object *help = eoi_help_new(main_canvas, "fbreader", page_updated_handler, help_closed);
diff --git a/zlibrary/ui/src/ewl/dialogs/ZLEwlMessage.cpp b/zlibrary/ui/src/ewl/dialogs/ZLEwlMessage.cpp
index f452ec2..69aec16 100644
--- a/zlibrary/ui/src/ewl/dialogs/ZLEwlMessage.cpp
+++ b/zlibrary/ui/src/ewl/dialogs/ZLEwlMessage.cpp
@@ -86,8 +86,13 @@ static void main_win_key_handler(void* param, Evas* e __UNUSED__, Evas_Object* o
 void show_message(char *text, void *handler)
 {
 	ee_init();
+	int width, height;
+	Ecore_X_Screen *screen = ecore_x_default_screen_get();
 
-	Ecore_Evas* main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, 600, 800);
+
+	ecore_x_screen_size_get(screen, &width, &height);
+
+	Ecore_Evas* main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, width, height);
 	ecore_evas_title_set(main_win, "MB");
 	ecore_evas_name_class_set(main_win, "MB", "MB");
 
@@ -105,7 +110,7 @@ void show_message(char *text, void *handler)
 //	edje_object_signal_callback_add(main_canvas_edje, "*", "*", main_win_signal_handler, NULL);
 	edje_object_part_text_set(main_canvas_edje, "text", text);
 	evas_object_move(main_canvas_edje, 0, 0);
-	evas_object_resize(main_canvas_edje, 600, 800);
+	evas_object_resize(main_canvas_edje, width, height);
 
 	Evas_Coord x, y, w, h;
 	const Evas_Object *t = edje_object_part_object_get(main_canvas_edje, "text");
@@ -114,7 +119,7 @@ void show_message(char *text, void *handler)
 	w += 20;
 	h += 20;
 	ecore_evas_resize(main_win, w, h);
-	ecore_evas_move(main_win, (600 - w)/2, (800 - h)/2);
+	ecore_evas_move(main_win, (width - w)/2, (height - h)/2);
 	evas_object_resize(main_canvas_edje, w, h);
 	evas_object_move(main_canvas_edje, 0, 0);
 	evas_object_show(main_canvas_edje);
@@ -197,13 +202,16 @@ static void entry_win_key_handler(void* param, Evas* e __UNUSED__, Evas_Object*
 long read_number(char *text)
 {
 	ee_init();
+	int width, height;
 
 	struct entry_number number;
 	number.text = text;
 	number.number = -1;
 	number.cnt = 0;
 
-	Ecore_Evas* main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, 600, 800);
+	Ecore_X_Screen *screen = ecore_x_default_screen_get();
+	ecore_x_screen_size_get(screen, &width, &height);
+	Ecore_Evas* main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, width, height);
 	ecore_evas_title_set(main_win, "EB");
 	ecore_evas_name_class_set(main_win, "EB", "EB");
 
@@ -220,7 +228,7 @@ long read_number(char *text)
 	evas_object_name_set(main_canvas_edje, "main_canvas_edje");
 //	edje_object_signal_callback_add(main_canvas_edje, "*", "*", main_win_signal_handler, NULL);
 	evas_object_move(main_canvas_edje, 0, 0);
-	evas_object_resize(main_canvas_edje, 600, 800);
+	evas_object_resize(main_canvas_edje, width, height);
 
 	char *t;
 	asprintf(&t, "%s: %-*d", text, MAXDIGITS, 999999);
@@ -239,7 +247,7 @@ long read_number(char *text)
 	w += 40;
 	h += 20;
 	ecore_evas_resize(main_win, w, h);
-	ecore_evas_move(main_win, (600 - w)/2, (800 - h)/2);
+	ecore_evas_move(main_win, (width - w)/2, (height - h)/2);
 	evas_object_resize(main_canvas_edje, w, h);
 	evas_object_move(main_canvas_edje, 0, 0);
 	evas_object_show(main_canvas_edje);
@@ -293,8 +301,12 @@ static void evas_object_callback_del(void *data __UNUSED__, Evas *e __UNUSED__,
 Ecore_Evas *text_entry(char *text, void (*handler)(const char*))
 {
 	ee_init();
+	int width, height;
+	Ecore_X_Screen *screen = ecore_x_default_screen_get();
+
 
-	Ecore_Evas* main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, 600, 800);
+	ecore_x_screen_size_get(screen, &width, &height);
+	Ecore_Evas* main_win = ecore_evas_software_x11_8_new(0, 0, 0, 0, width, height);
 	ecore_evas_title_set(main_win, "TE");
 	ecore_evas_name_class_set(main_win, "TE", "TE");
 
@@ -318,7 +330,7 @@ Ecore_Evas *text_entry(char *text, void (*handler)(const char*))
 
 	Evas_Object *bg = evas_object_rectangle_add(main_canvas);
 	evas_object_move(bg, 0, 0);
-	evas_object_resize(bg, 600, 800);
+	evas_object_resize(bg, width, height);
 	evas_object_color_set(bg, 255, 255, 255, 255);
 	evas_object_show(bg);
 	eoi_resize_object_register(main_win, bg, text_entry_resized, NULL);
diff --git a/zlibrary/ui/src/ewl/view/ZLEwlPaintContext.cpp b/zlibrary/ui/src/ewl/view/ZLEwlPaintContext.cpp
index 0d5a2ce..61e5835 100644
--- a/zlibrary/ui/src/ewl/view/ZLEwlPaintContext.cpp
+++ b/zlibrary/ui/src/ewl/view/ZLEwlPaintContext.cpp
@@ -37,9 +37,6 @@ extern unsigned int *pal;
 ZLEwlPaintContext::ZLEwlPaintContext() {
 	image = NULL;
 
-	myWidth = 600;
-	myHeight = 800;
-
 	myContext = 0;
 
 	ft2bmp = NULL;
@@ -73,6 +70,8 @@ ZLEwlPaintContext::ZLEwlPaintContext() {
 
 		screen = xcb_aux_get_screen (connection, screen_number);
 
+		myWidth = screen->width_in_pixels;
+		myHeight = screen->height_in_pixels;
 		dpi_x = (((double)screen->width_in_pixels) * 25.4) / ((double) screen->width_in_millimeters);
 		dpi_y = (((double)screen->height_in_pixels) * 25.4) / ((double) screen->height_in_millimeters);
 
diff --git a/zlibrary/ui/src/ewl/view/ZLEwlViewWidget.cpp b/zlibrary/ui/src/ewl/view/ZLEwlViewWidget.cpp
index 553b6e2..127d481 100644
--- a/zlibrary/ui/src/ewl/view/ZLEwlViewWidget.cpp
+++ b/zlibrary/ui/src/ewl/view/ZLEwlViewWidget.cpp
@@ -128,8 +128,6 @@ int ZLEwlViewWidget::height() const {
 
 ZLEwlViewWidget::ZLEwlViewWidget(ZLApplication *application, ZLView::Angle initialAngle) : ZLViewWidget(initialAngle) {
 	myApplication = application;
-	w = 600;
-	h = 800;
 
 	uint32_t              mask;
 	uint32_t              values[2];
@@ -144,6 +142,8 @@ ZLEwlViewWidget::ZLEwlViewWidget(ZLApplication *application, ZLView::Angle initi
 
 	screen = xcb_aux_get_screen (connection, screen_number);
 
+	w = screen->width_in_pixels;
+	h = screen->height_in_pixels;
 	xcb_randr_query_version_reply_t *rr_version;
 	rr_version = xcb_randr_query_version_reply(connection, xcb_randr_query_version(connection, 1, 1), 0);
 
@@ -175,7 +175,7 @@ ZLEwlViewWidget::ZLEwlViewWidget(ZLApplication *application, ZLView::Angle initi
 	xcb_create_window(connection,
 			depth,
 			window, screen->root,
-			0, 0, 600, 800,
+			0, 0, w, h,
 			0, XCB_WINDOW_CLASS_INPUT_OUTPUT,
 			screen->root_visual,
 			mask, values);
@@ -183,7 +183,7 @@ ZLEwlViewWidget::ZLEwlViewWidget(ZLApplication *application, ZLView::Angle initi
 	rect = xcb_generate_id (connection);
 	xcb_create_pixmap (connection, depth,
 			rect, window,
-			600, 800);
+			w, h);
 
 	xcb_map_window(connection, window);
 
@@ -224,7 +224,7 @@ ZLEwlViewWidget::ZLEwlViewWidget(ZLApplication *application, ZLView::Angle initi
 		else
 			format = (xcb_image_format_t)0;
 
-		im = xcb_image_create_native (connection, 600, 800,
+		im = xcb_image_create_native (connection, w, h,
 				format, depth, NULL, ~0, NULL);
 		assert(im);
 
-- 
1.7.9.5

